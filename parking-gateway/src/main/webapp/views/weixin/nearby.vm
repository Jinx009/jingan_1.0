#set($cPath = "#cPath")
#set($layout = "layout/empty.vm")
<script src="http://res.wx.qq.com/open/js/jweixin-1.0.0.js" type="text/javascript"></script>
<script src="http://api.map.baidu.com/api?v=2.0&ak=F2422682c3c379bf1ea8857993588bb8" type="text/javascript"></script>
<script src="http://api.map.baidu.com/library/EventWrapper/1.2/src/EventWrapper.min.js" type="text/javascript"></script>

<style>
    html{height:100%}
    body{height:100%;margin:0px;padding:0px}
    #container{height:100%}
</style>
<div id="container">

</div>
<div class="loading-block hide">
    <div class="overlay"></div>
    <div style="position:absolute;top:45%;color:#F2F2F2;z-index:9999;left:0;right:0;text-align:center">
        <div class="loading-text">
            <i class="quan"></i>
            <span class="msg">正在请求，请稍后</span>
        </div>
    </div>
</div>
<script type="text/javascript">

    wx.config({
        debug: false,
        appId: '$appId',
        timestamp: $timestamp,
        nonceStr: '$nonceStr',
        signature: '$sign',
        jsApiList: [
            'checkJsApi',
            'onMenuShareTimeline',
            'onMenuShareAppMessage',
            'onMenuShareQQ',
            'onMenuShareWeibo',
            'hideMenuItems',
            'showMenuItems',
            'hideAllNonBaseMenuItem',
            'showAllNonBaseMenuItem',
            'translateVoice',
            'startRecord',
            'stopRecord',
            'onRecordEnd',
            'playVoice',
            'pauseVoice',
            'stopVoice',
            'uploadVoice',
            'downloadVoice',
            'chooseImage',
            'previewImage',
            'uploadImage',
            'downloadImage',
            'getNetworkType',
            'openLocation',
            'getLocation',
            'hideOptionMenu',
            'showOptionMenu',
            'closeWindow',
            'scanQRCode',
            'chooseWXPay',
            'openProductSpecificView',
            'addCard',
            'chooseCard',
            'openCard'
        ]
    });

    wx.ready(function () {

        // 复杂的自定义覆盖物
        function ComplexCustomOverlay(point, text, id){
            this._point = point;
            this._text = text;
            this._id = id;
        }

        ComplexCustomOverlay.prototype = new BMap.Overlay();

        ComplexCustomOverlay.prototype.initialize = function(map){
            this._map = map;
            var div = this._div = document.createElement("div");
            div.style.position = "absolute";
            div.style.zIndex = BMap.Overlay.getZIndex(this._point.lat);
            div.style.background = "url($cPath/resources/img/circle.png) no-repeat 0 0";
            div.style.backgroundSize = "55px";
            div.style.color = "white";
            div.style.height = "55px";
            div.style.width = "55px";
            div.style.MozUserSelect = "none";
            div.style.fontSize = "12px"
            var span = this._span = document.createElement("span");
            span.style.textAlign = "center";
            span.style.width = "55px";
            span.style.height = "55px";
            span.style.float = "left";
            span.style.lineHeight = "55px";
            span.style.fontSize = "28px";
            span.style.fontWeight = "700";
            div.appendChild(span);
            span.appendChild(document.createTextNode(this._text));

            map.getPanes().labelPane.appendChild(div);

            var self = this;

            div.addEventListener('touchstart',function(){

                window.location.href="$cPath/weixin/h5/detail?id=" + self._id;

            });

            return div;
        }
        ComplexCustomOverlay.prototype.draw = function(){
            var map = this._map;
            var pixel = map.pointToOverlayPixel(this._point);
            this._div.style.left = pixel.x - 30 + "px";
            this._div.style.top  = pixel.y - 30 + "px";
        }

        ComplexCustomOverlay.prototype.addEventListener = function(event, fun){
            this._div['on'+event] = fun;
        }

        wx.getLocation({
            type: 'wgs84', // 默认为wgs84的gps坐标，如果要返回直接给openLocation用的火星坐标，可传入'gcj02'
            success: function (res) {
                var latitude = res.latitude; // 纬度，浮点数，范围为90 ~ -90
                var longitude = res.longitude; // 经度，浮点数，范围为180 ~ -180。
                var speed = res.speed; // 速度，以米/每秒计
                var accuracy = res.accuracy; // 位置精度

                var map = new BMap.Map("container");          // 创建地图实例
                var point = new BMap.Point(longitude, latitude);  // 创建点坐标
                map.centerAndZoom(point, 15);                 // 初始化地图，设置中心点坐标和地图级别

                var center = map.getCenter();

                var geocoder = new BMap.Geocoder();

                var prevDistrict;

                function handleAreas(result){
                    if(prevDistrict != result.addressComponents.district){

                        protops.base.startLoading();

                        var params = {};
                        params.district = result.addressComponents.district;

                        // 这里发起请求
                        protops.base.baseSend("$cPath/weixin/h5/getAreasByDistrict", params, function(response){

                            if (response.respCode != "00") {
                                protops.base.hint(response.msg);
                                protops.base.endLoading();
                                return false;
                            }

                            var list = response.params.areaVoList;

                            for(var idx in list){

                                var point = new BMap.Point(list[idx].longitude, list[idx].latitude);

                                var myCompOverlay = new ComplexCustomOverlay(point, list[idx].availableCnt, list[idx].id);

                                map.addOverlay(myCompOverlay);

                            }

                            protops.base.endLoading();
                        });

                    }

                    prevDistrict = result.addressComponents.district;
                }

                geocoder.getLocation(center, function(result){
                    handleAreas(result);
                })

                // 这个方法捕获拖动点，如果拖动结束，并且如果发现地理位置发生变化，就禁止拖动，并且请求，成功后在开始
                map.addEventListener("dragend", function(){
                    var center = map.getCenter();
                    geocoder.getLocation(center, function(result){
                        handleAreas(result);
                    })
                })

//                translateCallback = function(data){
//
//                    if(data.status == 0){
//
//                        var myCompOverlay = new ComplexCustomOverlay(data.points[0], "11");
//
//                        map.addOverlay(myCompOverlay);
//                        map.setCenter(data.points[0]);
//                    }
//                }

//                setTimeout(function(){
//                    var convertor = new BMap.Convertor();
//                    var pointArr = [];
//                    pointArr.push(point);
//                    convertor.translate(pointArr, 1, 5, translateCallback);
//
//                }, 1000);


            }
        });

    });








</script>